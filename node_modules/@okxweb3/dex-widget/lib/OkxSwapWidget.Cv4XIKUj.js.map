{"version":3,"file":"OkxSwapWidget.Cv4XIKUj.js","sources":["../src/events/OkxEventEmitter.ts","../src/messages.ts","../src/types.ts","../src/IframeEventEmitter.ts","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_freeGlobal.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_root.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_Symbol.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getRawTag.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_objectToString.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseGetTag.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isObjectLike.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArray.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isObject.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/identity.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isFunction.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayEach.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isIndex.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isLength.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArrayLike.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isPrototype.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseTimes.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsArguments.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArguments.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/stubFalse.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isBuffer.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsTypedArray.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseUnary.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_nodeUtil.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isTypedArray.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayLikeKeys.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_overArg.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_nativeKeys.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseKeys.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/keys.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createBaseFor.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFor.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseForOwn.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createBaseEach.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseEach.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_castFunction.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/forEach.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isString.js","../src/widgetHelp.ts","../src/verifyParamsUtils.ts","../src/transactions/EvmStrategy.ts","../../../node_modules/.pnpm/base-x@4.0.0/node_modules/base-x/src/index.js","../../../node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js","../src/transactions/SolanaStrategy.ts","../src/transactions/TransactionProcessor.ts","../src/IframeRpcProviderBridge.ts","../src/updateIframeStyle.ts","../src/OkxSwapWidget.ts"],"sourcesContent":["import { OkxEvents, OkxEventPayloadMap } from '.';\n\nexport type OkxEventHandler<T extends OkxEvents> = (payload: OkxEventPayloadMap[T]) => void;\n\nexport type OkxEventListener<T extends OkxEvents> = T extends OkxEvents\n    ? { event: T; handler: OkxEventHandler<T> }\n    : never;\n\nexport type OkxEventListeners = OkxEventListener<OkxEvents>[];\n\nexport interface OkxEventEmitter {\n    on(listener: OkxEventListener<OkxEvents>): void;\n    off(listener: OkxEventListener<OkxEvents>): void;\n    emit<T extends OkxEvents>(event: T, payload: OkxEventPayloadMap[T]): void;\n}\n\nexport class SimpleOkxEventEmitter implements OkxEventEmitter {\n    private subscriptions: {\n        [key: string]: OkxEventHandler<any>[]; // Use generic parameter for listener type\n    } = {};\n\n    on(listener: OkxEventListener<OkxEvents>): void {\n        const { event, handler } = listener;\n        if (!this.subscriptions[event]) {\n            this.subscriptions[event] = [];\n        }\n        this.subscriptions[event].push(handler);\n    }\n\n    off(listener: OkxEventListener<OkxEvents>): void {\n        const { event, handler } = listener;\n        if (this.subscriptions[event]) {\n            this.subscriptions[event] = this.subscriptions[event].filter(\n                listener => listener !== handler,\n            );\n        }\n    }\n\n    emit<T extends OkxEvents>(event: T, payload: OkxEventPayloadMap[T]): void {\n        if (this.subscriptions[event]) {\n            this.subscriptions[event].forEach(handler => handler(payload));\n        }\n    }\n}\n","import {\n    WidgetMethodsEmit,\n    WidgetMethodsEmitPayloadMap,\n    WidgetMethodsListen,\n    WidgetMethodsListenPayloadMap,\n    WidgetProviderEventPayloadMap,\n    WidgetProviderEvents,\n} from './types';\n\n/**\n * Key for identifying the event associated with the Okx Swap Widget.\n */\nconst OKX_SWAP_WIDGET_EVENT_KEY = 'okxWidget';\n\nexport function postMessageToWindow<T extends WidgetMethodsEmit>(\n    contentWindow: Window,\n    method: T,\n    payload: WidgetMethodsEmitPayloadMap[T],\n): void;\nexport function postMessageToWindow<T extends WidgetMethodsListen>(\n    contentWindow: Window,\n    method: T,\n    payload: WidgetMethodsListenPayloadMap[T],\n): void;\nexport function postMessageToWindow<T extends WidgetProviderEvents>(\n    contentWindow: Window,\n    method: T,\n    payload: WidgetProviderEventPayloadMap[T],\n): void;\n\nexport function postMessageToWindow(contentWindow: Window, method: string, payload: unknown) {\n    const data = typeof payload === 'object' ? payload : {};\n    const postPayload = {\n        key: OKX_SWAP_WIDGET_EVENT_KEY,\n        method,\n        ...data,\n    };\n\n    contentWindow?.postMessage(\n        postPayload,\n        '*', // TODO: Change to Okx specific origin in production.\n    );\n}\n\nexport type WindowListener = (event: MessageEvent<unknown>) => void;\n\nexport function listenToMessageFromWindow<T extends WidgetMethodsListen>(\n    contentWindow: Window,\n    method: T,\n    callback: (payload: WidgetMethodsListenPayloadMap[T]) => void,\n): WindowListener;\nexport function listenToMessageFromWindow<T extends WidgetMethodsEmit>(\n    contentWindow: Window,\n    method: T,\n    callback: (payload: WidgetMethodsEmitPayloadMap[T]) => void,\n): WindowListener;\n\nexport function listenToMessageFromWindow<T extends WidgetProviderEvents>(\n    contentWindow: Window,\n    method: T,\n    callback: (payload: WidgetProviderEventPayloadMap[T]) => void,\n): WindowListener;\n\nexport function listenToMessageFromWindow<T = unknown>(\n    contentWindow: Window,\n    method: string,\n    callback: (payload: T) => void,\n): (payload: MessageEvent<unknown>) => void {\n    const listener = (event: MessageEvent<unknown>) => {\n        if (\n            !isEventData(event.data) ||\n            event.data.key !== OKX_SWAP_WIDGET_EVENT_KEY ||\n            event.data.method !== method\n        ) {\n            return;\n        }\n        callback(event.data as unknown as T);\n    };\n    contentWindow.addEventListener('message', listener);\n\n    return listener;\n}\n\ninterface EventData {\n    key: string;\n    method: string;\n}\n\nfunction isEventData(obj): obj is EventData {\n    return (\n        typeof obj === 'object' &&\n        obj !== null &&\n        'key' in obj &&\n        'method' in obj &&\n        typeof obj.key === 'string' &&\n        typeof obj.method === 'string'\n    );\n}\n\nexport function stopListeningToMessageFromWindow<T extends WidgetMethodsListen>(\n    contentWindow: Window,\n    method: T,\n    callback: (payload: WidgetMethodsListenPayloadMap[T]) => void,\n): void;\nexport function stopListeningToMessageFromWindow<T extends WidgetMethodsEmit>(\n    contentWindow: Window,\n    method: T,\n    callback: (payload: WidgetMethodsEmitPayloadMap[T]) => void,\n): void;\n\nexport function stopListeningToMessageFromWindow<T extends WidgetProviderEvents>(\n    contentWindow: Window,\n    _method: string,\n    callback: (payload: WidgetProviderEventPayloadMap[T]) => void,\n): void;\n\nexport function stopListeningToMessageFromWindow(\n    contentWindow: Window,\n    _method: string,\n    callback: (payload: unknown) => void,\n) {\n    contentWindow.removeEventListener('message', callback);\n}\n\nexport function stopListeningWindowListener(contentWindow: Window, callback: WindowListener) {\n    contentWindow.removeEventListener('message', callback);\n}\n","import { PublicKey } from '@solana/web3.js';\n\nimport type { SupportedChainId } from './common';\nimport { OkxEventListeners, OkxEventPayloadMap, OkxEvents } from './events';\n\nexport { SupportedChainId } from './common';\n\nexport enum WidgetMethodsEmit {\n    ACTIVATE = 'ACTIVATE',\n    UPDATE_HEIGHT = 'UPDATE_HEIGHT',\n    SET_FULL_HEIGHT = 'SET_FULL_HEIGHT',\n    EMIT_OKX_EVENT = 'EMIT_OKX_EVENT',\n    PROVIDER_RPC_REQUEST = 'PROVIDER_RPC_REQUEST',\n    INTERCEPT_WINDOW_OPEN = 'INTERCEPT_WINDOW_OPEN',\n    LOAD_READY = 'LOAD_READY',\n}\n\nexport enum WidgetMethodsListen {\n    UPDATE_PARAMS = 'UPDATE_PARAMS',\n    UPDATE_APP_DATA = 'UPDATE_APP_DATA',\n    PROVIDER_RPC_RESPONSE = 'PROVIDER_RPC_RESPONSE',\n    PROVIDER_ON_EVENT = 'PROVIDER_ON_EVENT',\n    PROVIDER_ON_EVENT_CONNECT = 'PROVIDER_ON_EVENT_CONNECT',\n    PROVIDER_ONEVENT_WALLET_SATUS = 'PROVIDER_ONEVENT_WALLET_SATUS',\n    PROVIDER_ONEVENT_WALLET_SOLANA_SATUS = 'PROVIDER_ONEVENT_WALLET_SOLANA_SATUS',\n    UPDATE_PROVIDER = 'UPDATE_PROVIDER',\n}\n\nexport enum WidgetProviderEvents {\n    PROVIDER_ON_EVENT_CONNECT = 'PROVIDER_ON_EVENT_CONNECT',\n    PROVIDER_ON_EVENT = 'PROVIDER_ON_EVENT',\n    PROVIDER_ONEVENT_WALLET_SATUS = 'PROVIDER_ONEVENT_WALLET_SATUS',\n    NO_WALLET_CONNECT = 'NO_WALLET_CONNECT',\n}\n\ntype OkxSwapWidgetParams = any;\n\nexport interface OkxSwapWidgetProps {\n    params: OkxSwapWidgetParams;\n    provider?: EthereumProvider | SolanaProvider;\n    listeners?: OkxEventListeners;\n    connectWalletHandle?: () => void;\n}\n\nexport interface JsonRpcRequest {\n    id: number;\n    method: string;\n    params: unknown[];\n}\n\nexport interface SolanaProvider {\n    isPhantom?: boolean;\n    connect(): Promise<{ publicKey: { toString(): string; toBase58(): string } }>;\n    disconnect(): Promise<void>;\n    signTransaction(transaction: any): Promise<any>;\n    signAllTransactions(transactions: any[]): Promise<any[]>;\n    signMessage(message: Uint8Array): Promise<any>;\n    on(event: string, listener: (...args: any[]) => void): void;\n    removeListener(event: string, listener: (...args: any[]) => void): void;\n    removeAllListeners(): void;\n    publicKey: PublicKey;\n}\n\n// https://eips.ethereum.org/EIPS/ei  p-1193\nexport interface EthereumProvider {\n    on(event: string, args: unknown): void;\n    request<T>(params: JsonRpcRequest): Promise<T>;\n    enable(): Promise<void>;\n    removeAllListeners: () => void;\n    selectedAddress: string;\n    accounts: string[];\n}\n\nexport type OkxSwapTheme = 'dark' | 'light';\n\n/**\n *Trade asset parameters, for example:\n * { asset: 'WBTC', amount: 12 }\n * or\n * { asset: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48' } // USDC\n */\nexport interface TradeAsset {\n    /** The asset symbol or identifier. */\n    asset: string;\n    /**\n     * The amount of the asset (optional).\n     * If specified, represents the quantity or value of the asset.\n     */\n    amount?: string;\n}\n\nexport enum TradeType {\n    SWAP = 'swap',\n    BRIDGE = 'bridge',\n    AUTO = 'auto',\n}\n\nexport enum THEME {\n    LIGHT = 'light',\n    DARK = 'dark',\n}\n\n/**\n * The partner fee\n *\n * Please contact https://okprotocol.typeform.com/to/rONXaxHV\n */\nexport interface PartnerFee {\n    /**\n     * The fee in basis points (BPS). One basis point is equivalent to 0.01% (1/100th of a percent)\n     */\n    bps: number;\n\n    /**\n     * The Ethereum address of the partner to receive the fee.\n     */\n    recipient: string | Record<SupportedChainId, string>;\n}\n\n/**\n * ERC-20 token information\n */\nexport type TokenInfo = {\n    chainId: number;\n    address: string;\n    name: string;\n    decimals: number;\n    symbol: string;\n    logoURI?: string;\n};\n\nexport const WIDGET_PALETTE_COLORS = [\n    'primary',\n    'background',\n    'paper',\n    'text',\n    'danger',\n    'warning',\n    'alert',\n    'info',\n    'success',\n] as const;\n\nexport type OkxSwapWidgetPaletteColors = typeof WIDGET_PALETTE_COLORS[number];\n\nexport type OkxSwapWidgetPaletteParams = { [K in OkxSwapWidgetPaletteColors]: string };\n\nexport type OkxSwapWidgetPalette = { baseTheme: OkxSwapTheme } & OkxSwapWidgetPaletteParams;\n\nexport interface OkxSwapWidgetSounds {\n    /**\n     * The sound to play when the order is executed. Defaults to world wide famous Okx Swap moooooooooo!\n     * Alternatively, you can use a URL to a custom sound file, or set to null to disable the sound.\n     */\n    postOrder?: string | null;\n\n    /**\n     * The sound to play when the order is executed. Defaults to world wide famous Okx Swap happy moooooooooo!\n     * Alternatively, you can use a URL to a custom sound file, or set to null to disable the sound.\n     */\n    orderExecuted?: string | null;\n\n    /**\n     * The sound to play when the order is executed. Defaults to world wide famous Okx Swap unhappy moooooooooo!\n     * Alternatively, you can use a URL to a custom sound file, or set to null to disable the sound.\n     */\n    orderError?: string | null;\n}\n\nexport interface OkxSwapWidgetImages {\n    /**\n     * The image to display when the orders table is empty (no orders yet). It defaults to \"Yoga Okx\" image.\n     * Alternatively, you can use a URL to a custom image file, or set to null to disable the image.\n     */\n    emptyOrders?: string | null;\n}\n\nexport interface OkxSwapWidgetBanners {\n    /**\n     * Banner text: \"Use Safe web app...\"\n     *\n     * Conditions for displaying the banner:\n     *  - Safe-like app is connected to Okx Swap via WalletConnect\n     *  - Selling native token via Swap\n     *  - Sell token needs approval\n     *\n     *  If the flag is set to true, the banner will not be displayed\n     */\n    hideSafeWebAppBanner?: boolean;\n}\n\nexport interface OkxSwapWidgetContent {\n    feeLabel?: string;\n    feeTooltipMarkdown?: string;\n}\n\nexport type WalletType = 'metamask' | 'phantom' | 'walletconnect';\n\n// Define types for event payloads\nexport interface WidgetMethodsEmitPayloadMap {\n    [WidgetMethodsEmit.ACTIVATE]: void;\n    [WidgetMethodsEmit.EMIT_OKX_EVENT]: EmitOkxEventPayload<OkxEvents>;\n    [WidgetMethodsEmit.UPDATE_HEIGHT]: UpdateWidgetHeightPayload;\n    [WidgetMethodsEmit.SET_FULL_HEIGHT]: SetWidgetFullHeightPayload;\n    [WidgetMethodsEmit.PROVIDER_RPC_REQUEST]: ProviderRpcRequestPayload;\n    [WidgetMethodsEmit.INTERCEPT_WINDOW_OPEN]: WindowOpenPayload;\n    [WidgetMethodsEmit.LOAD_READY]: UpdateParamsPayload;\n}\n\nexport interface WidgetMethodsListenPayloadMap {\n    [WidgetMethodsListen.UPDATE_APP_DATA]: UpdateAppDataPayload;\n    [WidgetMethodsListen.UPDATE_PARAMS]: UpdateParamsPayload;\n    [WidgetMethodsListen.UPDATE_PROVIDER]: UpdateProviderPayload;\n    [WidgetMethodsListen.PROVIDER_RPC_RESPONSE]: ProviderRpcResponsePayload;\n    [WidgetMethodsListen.PROVIDER_ON_EVENT]: ProviderOnEventPayload;\n    [WidgetMethodsListen.PROVIDER_ON_EVENT_CONNECT]: ProviderOnEventPayload;\n    [WidgetMethodsListen.PROVIDER_ONEVENT_WALLET_SATUS]: ProviderOnWalletEventPayload;\n    [WidgetMethodsListen.PROVIDER_ONEVENT_WALLET_SOLANA_SATUS]: ProviderOnWalletEventPayload;\n}\n\nexport interface WidgetProviderEventPayloadMap {\n    [WidgetProviderEvents.PROVIDER_ON_EVENT_CONNECT]: ProviderEventMessage;\n    [WidgetProviderEvents.PROVIDER_ON_EVENT]: ProviderEventMessage;\n    [WidgetProviderEvents.PROVIDER_ONEVENT_WALLET_SATUS]: ProviderOnWalletEventPayload;\n    [WidgetProviderEvents.NO_WALLET_CONNECT]: ProviderOnWalletEventPayload;\n}\n\nexport type WidgetMethodsEmitPayloads = WidgetMethodsEmitPayloadMap[WidgetMethodsEmit];\nexport type WidgetMethodsListenPayloads = WidgetMethodsListenPayloadMap[WidgetMethodsListen];\n\n// export type OkxSwapWidgetAppParams = Omit<OkxSwapWidgetParams, 'theme'>\n\nexport interface UpdateProviderParams {\n    providerType: ProviderType;\n    walletType: WalletType;\n    chainId: string | number;\n    address: string;\n}\n\nexport interface UpdateProviderPayload {\n    appParams: UpdateProviderParams;\n    hasProvider: boolean;\n}\n\nexport interface UpdateAppDataPayload {\n    metaData?: {\n        appCode: string;\n    };\n}\n\nexport interface UpdateWidgetHeightPayload {\n    height?: number;\n}\n\nexport interface SetWidgetFullHeightPayload {\n    isUpToSmall?: boolean;\n}\n\nexport interface EmitOkxEventPayload<T extends OkxEvents> {\n    event: T;\n    payload: OkxEventPayloadMap[T];\n}\n\nexport type WidgetMethodsEmitListener<T extends WidgetMethodsEmit> = T extends WidgetMethodsEmit\n    ? { event: T; handler: WidgetMethodHandler<T> }\n    : never;\n\nexport type WidgetMethodHandler<T extends WidgetMethodsEmit> = (\n    payload: WidgetMethodsEmitPayloadMap[T],\n) => void;\n\nexport interface ProviderRpcRequestPayload {\n    rpcRequest: JsonRpcRequestMessage;\n}\n\nexport interface WindowOpenPayload {\n    href: string | URL;\n    target: string;\n    rel: string;\n}\n\nexport interface JsonRpcRequestMessage {\n    jsonrpc: '2.0';\n    // Optional in the request.\n    id?: number;\n    method: string;\n    params: unknown[];\n}\n\nexport interface ProviderEventMessage {\n    id: string;\n    mode: 'iframe' | 'window';\n    params: any[];\n    path: string;\n    type: string;\n}\n\nexport interface BaseJsonRpcResponseMessage {\n    // Required but null if not identified in request\n    id: number;\n    jsonrpc: '2.0';\n}\n\nexport interface JsonRpcSucessfulResponseMessage<TResult = unknown>\n    extends BaseJsonRpcResponseMessage {\n    result: TResult;\n}\n\nexport interface JsonRpcError<TData = unknown> {\n    code: number;\n    message: string;\n    data?: TData;\n}\n\nexport interface JsonRpcErrorResponseMessage<TErrorData = unknown>\n    extends BaseJsonRpcResponseMessage {\n    error: JsonRpcError<TErrorData>;\n}\n\nexport type ProviderRpcResponsePayload = {\n    rpcResponse: JsonRpcResponse;\n};\n\nexport type JsonRpcResponse =\n    | JsonRpcRequestMessage\n    | JsonRpcErrorResponseMessage\n    | JsonRpcSucessfulResponseMessage;\n\nexport interface ProviderOnEventPayload {\n    id: string;\n    mode: 'iframe' | 'window';\n    success: boolean;\n    path: string;\n    type: string;\n    data?: unknown;\n    error?: string;\n}\n\nexport interface ProviderOnWalletEventPayload {\n    event: string;\n    params: unknown;\n}\n\n// new\nexport interface IFeeConfig {\n    [key: string]: {\n        feePercent?: string | number;\n        referrerAddress?: {\n            [key: string]: {\n                feePercent: string | number;\n            };\n        };\n    };\n}\n\nexport interface ITokenPair {\n    fromChain: string | number;\n    toChain: string | number;\n    fromToken?: string;\n    toToken?: string;\n}\n\nexport interface IFormattedTokenPair {\n    inputChain?: string | number;\n    outputChain?: string | number;\n    inputCurrency?: string;\n    outputCurrency?: string;\n}\n\nexport enum ProviderType {\n    EVM = 'EVM',\n    SOLANA = 'SOLANA',\n    WALLET_CONNECT = 'WALLET_CONNECT',\n}\n\nexport const ChainName = ProviderType;\n\nexport type TWalletTypeRecord = Record<ProviderType, WalletType>;\n\nexport interface IWidgetProps {\n    widgetVersion: string;\n    tradeType: TradeType[];\n    feeConfig: IFeeConfig;\n    theme: THEME;\n    providerType: ProviderType;\n    walletType: WalletType;\n    tokenPair?: IFormattedTokenPair;\n    bridgeTokenPair?: IFormattedTokenPair;\n    lang?: string;\n    chainIds?: string[];\n    sdkVersion?: string;\n}\n\nexport interface IFormattedWidgetProps {\n    url: string;\n    data: IWidgetProps;\n}\n\nexport interface IWidgetParams {\n    // todo: check this\n    appCode?: string;\n\n    width?: number;\n\n    height?: string;\n\n    // only for developer\n    baseUrl?: string;\n\n    // Swap, Bridget or Auto\n    tradeType?: TradeType;\n\n    feeConfig?: IFeeConfig;\n\n    // The theme of the widget. Default: 'light'\n    theme?: THEME;\n\n    providerType?: ProviderType;\n\n    tokenPair?: ITokenPair;\n\n    bridgeTokenPair?: ITokenPair;\n\n    lang?: string;\n\n    chainIds?: string[];\n\n    extraParams?: any;\n}\nexport interface IWidgetConfig {\n    params: IWidgetParams;\n    provider?: EthereumProvider;\n    listeners?: OkxEventListeners;\n    connectWalletHandle?: () => void;\n}\n\nexport interface UpdateParamsPayload {\n    appParams: IWidgetProps;\n}\n\nexport interface TransactionInput {\n    readonly [key: string]: unknown;\n    readonly to?: string; // If its a contract creation tx then no address wil be specified.\n    readonly from?: string;\n    readonly data?: string;\n    readonly input?: string;\n    readonly gas: string;\n    readonly gasLimit?: string;\n    readonly gasPrice?: string;\n    readonly maxPriorityFeePerGas?: string;\n    readonly maxFeePerGas?: string;\n    readonly nonce: string;\n    readonly value: string;\n    readonly blockNumber?: string;\n    readonly transactionIndex?: string;\n    readonly type?: string;\n    readonly chainId?: string;\n}\n\n// Make each attribute mutable by removing `readonly`\nexport type Mutable<T> = {\n    -readonly [P in keyof T]: T[P];\n};\n\nexport type HexString = string;\nexport type Numbers = number | bigint | string | HexString;\n\nexport type TransactionOutput = {\n    readonly [key: string]: unknown;\n    readonly to?: HexString; // If its a contract creation tx then no address wil be specified.\n    readonly from?: HexString;\n    readonly input: string;\n    readonly gas?: Numbers;\n    readonly gasLimit?: string;\n    readonly nonce: Numbers;\n    readonly value: Numbers;\n    readonly blockNumber?: Numbers;\n    readonly transactionIndex?: Numbers;\n} & (\n        | { maxPriorityFeePerGas: Numbers; maxFeePerGas: Numbers; gasPrice?: never }\n        | { maxPriorityFeePerGas?: never; maxFeePerGas?: never; gasPrice: Numbers }\n    );\n\n\nexport type ValidInputTypes = Uint8Array | bigint | string | number | boolean;","import { SimpleOkxEventEmitter, OkxEventListener, OkxEventListeners, OkxEvents } from './events';\nimport { WindowListener, listenToMessageFromWindow, stopListeningWindowListener } from './messages';\nimport { WidgetMethodsEmit } from './types';\n\nexport class IframeEventEmitter {\n    private eventEmitter: SimpleOkxEventEmitter = new SimpleOkxEventEmitter();\n    private listeners: OkxEventListeners = [];\n    private widgetListener: WindowListener;\n\n    constructor(private contentWindow: Window, listeners: OkxEventListeners = []) {\n        // Subscribe listeners to local event emitter\n        this.updateListeners(listeners);\n\n        // Listen to iFrame, and forward to local event emitter\n        this.widgetListener = listenToMessageFromWindow(\n            this.contentWindow,\n            WidgetMethodsEmit.EMIT_OKX_EVENT,\n            okxEvent => {\n                const payload = okxEvent.payload || (okxEvent as any)?.params;\n                console.log('eventEmitter:', {\n                    okxEvent,\n                    event: okxEvent.event,\n                    payload,\n                });\n\n                this.eventEmitter.emit(okxEvent.event, payload);\n            },\n        );\n    }\n\n    public stopListeningIframe() {\n        stopListeningWindowListener(this.contentWindow, this.widgetListener);\n    }\n\n    public updateListeners(listeners?: OkxEventListeners): void {\n        // Unsubscribe from previous listeners\n        for (const listener of this.listeners) {\n            this.eventEmitter.off(listener as OkxEventListener<OkxEvents>);\n        }\n\n        // Subscribe to events\n        this.listeners = listeners || [];\n        for (const listener of this.listeners) {\n            this.eventEmitter.on(listener as OkxEventListener<OkxEvents>);\n        }\n    }\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import identity from './identity.js';\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nexport default castFunction;\n","import arrayEach from './_arrayEach.js';\nimport baseEach from './_baseEach.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEach;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import { isString, forEach, isObject } from 'lodash-es';\n\nimport {\n  TradeType,\n  IWidgetParams,\n  ITokenPair,\n  TWalletTypeRecord,\n  ProviderType,\n  IFormattedTokenPair,\n  IFormattedWidgetProps,\n} from './types';\nimport { verifyWidgetParams } from './verifyParamsUtils';\n\nconst DEFAULT_BASE_URL = 'https://www.okx.com';\n\nexport const WIDGET_ROUTE_CONSTANTS = {\n  SWAP: 'web3/dex-widget',\n  BRIDGE: 'web3/dex-widget/bridge',\n};\n\nexport const WALLET_TYPE: TWalletTypeRecord = {\n  [ProviderType.EVM]: 'metamask',\n  [ProviderType.SOLANA]: 'phantom',\n  [ProviderType.WALLET_CONNECT]: 'walletconnect',\n};\n\nexport const SOLANA_CHAIN_ID = 501;\n\n\nexport const formatTokenPair = (tokenPair?: ITokenPair): IFormattedTokenPair => {\n  return tokenPair\n    ? {\n      inputChain: tokenPair.fromChain,\n      outputChain: tokenPair.toChain,\n      inputCurrency: tokenPair.fromToken,\n      outputCurrency: tokenPair.toToken,\n    }\n    : null;\n};\n\n// this function is designed to determine the supported trade types and the appropriate route based on the provided trade type and token pairs.\n// It returns an object containing the supported trade types, the route, and formatted token pairs.\nexport function formatDefaultConfig(\n  tradeType: TradeType,\n  tokenPair?: ITokenPair,\n  bridgeTokenPair?: ITokenPair,\n): {\n  supportTradeType: TradeType[];\n  route: string;\n  defaultTokenPair?: IFormattedTokenPair,\n  formattedTokenPair?: IFormattedTokenPair,\n  formattedBridgeTokenPair?: IFormattedTokenPair\n} {\n  const formattedTokenPair = formatTokenPair(tokenPair);\n  const formattedBridgeTokenPair = formatTokenPair(bridgeTokenPair);\n\n  if (tradeType === TradeType.SWAP) {\n    return {\n      supportTradeType: [TradeType.SWAP],\n      route: WIDGET_ROUTE_CONSTANTS.SWAP,\n      defaultTokenPair: formattedTokenPair,\n      formattedTokenPair,\n      formattedBridgeTokenPair: null,\n    };\n  }\n\n  if (tradeType === TradeType.BRIDGE) {\n    return {\n      supportTradeType: [TradeType.BRIDGE],\n      route: WIDGET_ROUTE_CONSTANTS.BRIDGE,\n      defaultTokenPair: formattedBridgeTokenPair,\n      formattedTokenPair: null,\n      formattedBridgeTokenPair,\n    };\n  }\n\n  const defaultIsBridge = !formattedTokenPair && formattedBridgeTokenPair;\n  const route = defaultIsBridge\n    ? WIDGET_ROUTE_CONSTANTS.BRIDGE\n    : WIDGET_ROUTE_CONSTANTS.SWAP;\n  const defaultTokenPair = defaultIsBridge ? formattedBridgeTokenPair : formattedTokenPair;\n\n  return {\n    supportTradeType: [TradeType.SWAP, TradeType.BRIDGE],\n    route,\n    defaultTokenPair,\n    formattedTokenPair,\n    formattedBridgeTokenPair,\n  };\n}\n\nexport const createWidgetParams = (widgetParams: IWidgetParams): IFormattedWidgetProps => {\n  const {\n    baseUrl,\n    feeConfig,\n    tokenPair,\n    bridgeTokenPair,\n    providerType,\n    tradeType,\n    theme,\n    lang,\n    chainIds,\n    extraParams,\n  } =\n    widgetParams;\n\n  const widgetVersion = process.env.WIDGET_VERSION;\n  const sdkVersion = process.env.SDK_VERSION;\n  // verify widget params, if invalid, throw error\n  verifyWidgetParams({\n    widgetVersion,\n    feeConfig,\n    tokenPair,\n    bridgeTokenPair,\n    providerType,\n  });\n\n  // get trade type config, route, default token pair and formatted tokenPair/bridgeTokenPair config\n  const {\n    supportTradeType,\n    route,\n    defaultTokenPair,\n    formattedTokenPair,\n    formattedBridgeTokenPair,\n  } = formatDefaultConfig(tradeType, tokenPair, bridgeTokenPair);\n\n  // define initial params\n  const initParams = {\n    tradeType: supportTradeType,\n    theme,\n    lang,\n    walletType: WALLET_TYPE[providerType],\n    widgetVersion,\n    sdkVersion,\n    chainIds,\n  };\n\n  // add token info to url params\n  const urlParams = {\n    ...initParams,\n    ...defaultTokenPair,\n  };\n  const params = new URLSearchParams();\n  // Append non-empty key-value pairs to URLSearchParams\n  for (const key in urlParams) {\n    if (urlParams.hasOwnProperty(key)) {\n      const value = urlParams[key];\n      if (value !== '' && value !== null && value !== undefined) {\n        params.append(key, value);\n      }\n    }\n  }\n  // get query\n  const queryString = params.toString();\n  // generate url\n  const host = typeof baseUrl === 'string' ? baseUrl : DEFAULT_BASE_URL;\n  const url = `${host}/${route}?${queryString}`;\n\n  // add tokenPair, feeConfig, providerType to generate data\n  const data = {\n    ...initParams,\n    tokenPair: formattedTokenPair,\n    bridgeTokenPair: formattedBridgeTokenPair,\n    feeConfig,\n    providerType,\n    extraParams,\n  };\n\n  return {\n    url,\n    data,\n  };\n};\n\nconst requestChainId = async (provider: any) => {\n  try {\n    const chainId = await provider.request({ method: 'eth_chainId' });\n    // Convert hexadecimal to decimal\n    const decimalChainId = parseInt(chainId, 16);\n    console.log(`log-requestChainId => decimal number: ${decimalChainId}`);\n    return decimalChainId;\n  } catch (error) {\n    console.error('log-requestChainId => Failed to get chainId:', error);\n    return null;\n  }\n};\n\nconst requestAddress = async (provider: any) => {\n  try {\n    const accounts = await provider.request({ method: 'eth_accounts' });\n    console.log(`log-requestAddress: ${accounts.join(',')}`);\n    return accounts[0];\n  } catch (error) {\n    console.log('log-requestAddress-Failed to get account:', error);\n    return null;\n  }\n};\n\nexport const isEvmProvider = (providerType: ProviderType) => {\n  return providerType === ProviderType.EVM;\n};\n\nexport const getChainId = async (provider: any, providerType: ProviderType) => {\n  console.log('log-getChainId-start', provider, providerType);\n  let chainId = null;\n\n  if (providerType === ProviderType.EVM && provider?.chainId) {\n    chainId = parseInt(provider.chainId, 16);\n  }\n\n  if (providerType === ProviderType.WALLET_CONNECT && provider?.chainId) {\n    chainId = provider.chainId;\n  }\n\n  if (providerType === ProviderType.SOLANA) {\n    chainId = SOLANA_CHAIN_ID;\n  }\n\n  if (chainId === null && provider && isEvmProvider(providerType)) {\n    chainId = await requestChainId(provider);\n  }\n\n  console.log('log-getChainId-end', chainId);\n\n  return chainId;\n};\n\nexport const getAddress = async (provider: any, providerType: ProviderType) => {\n  console.log('log-getAddress-start', provider, providerType);\n  let account = null;\n\n  if (providerType === ProviderType.EVM && provider?.chainId) {\n    account = provider.selectedAddress;\n  }\n\n  if (providerType === ProviderType.WALLET_CONNECT && provider?.chainId) {\n    account = provider.accounts?.[0];\n  }\n\n  if(!account && provider && isEvmProvider(providerType)) {\n    account = await requestAddress(provider);\n  }\n\n  if (providerType === ProviderType.SOLANA) {\n    account = provider?.publicKey?.toBase58();\n  }\n  console.log('log-getAddress-end', account);\n  return account;\n};\n\n/**\n * Checks if a decoded URI component contains valid printable characters\n * @param {string} str - The decoded string to check\n * @returns {boolean} - Returns true if the string is valid, false if it contains \"garbage\" characters\n */\nexport const isPrintableString = (str: string): boolean => {\n  // Regular expression to match printable ASCII characters (from space to tilde)\n  const printablePattern = /^[\\x20-\\x7E]*$/;\n\n  // Check if the string contains only printable characters\n  return printablePattern.test(str);\n};\n\n/**\n * Safely decodes a URI component, checking if it contains printable characters\n * @param {string} value - The URI component to decode\n * @returns {string} - The decoded value, or throws an error if the decoded value contains garbage characters\n */\nexport const safeDecodeURIComponent = (value: string): string => {\n  try {\n    // Decode the URI component\n    const decodedValue = decodeURIComponent(value);\n\n    // Check if the decoded string contains valid printable characters\n    if (!isPrintableString(decodedValue)) {\n      throw new Error(`Decoded value contains invalid characters: ${decodedValue}`);\n    }\n\n    return decodedValue;\n  } catch (e) {\n    throw new Error(`Failed to decode URI component: ${value}. Error: ${e.message}`);\n  }\n};\n\n/**\n * Checks if all URL parameters are valid, and stops on the first invalid one\n * @param {string} url - The URL string to check\n * @returns An object containing valid parameters, or throws an error if any parameter is invalid\n */\nexport const checkUrlParam = (url: string): Record<string, string> => {\n  // Parse the URL to extract query string parameters\n  const urlObj = new URL(url);\n  const params = new URLSearchParams(urlObj.search);\n\n  // Object to store the result of valid parameters\n  const result = {};\n\n  // Iterate over all parameters in the URL\n  for (const [key, value] of params.entries()) {\n    // Safely decode the parameter value, stops execution if an error occurs\n    const decodedValue = safeDecodeURIComponent(value);\n\n    // You can add more validation logic here, if needed\n    result[key] = decodedValue;\n  }\n\n  return result;\n};\n\n/**\n * Recursively validates the given parameters.\n * If the value is a string, it checks if it's printable.\n * If the value is an object, it recursively checks each key-value pair.\n *\n * @param params - The object or string to validate\n * @throws {Error} If any parameter is invalid or contains illegal characters\n * @returns {boolean} - Returns true if all parameters are valid\n */\nexport const validateWidgetParams = (params: any): boolean => {\n  console.log('params:', params);\n  if (isString(params)) {\n    // If the parameter is a string, check if it's valid\n    if (!isPrintableString(params)) {\n      throw new Error(`Invalid string found: ${params}`);\n    }\n    return true;\n  }\n\n  if (isObject(params)) {\n    // If the parameter is an object, recursively validate its key-value pairs\n    forEach(params, (value, key) => {\n      // Validate both the key and the value\n      if (!isPrintableString(key)) {\n        throw new Error(`Invalid object key found: ${key}`);\n      }\n      validateWidgetParams(value); // Recursively validate the value\n    });\n    return true;\n  }\n\n  // If neither string nor object, assume it's valid (you can extend this logic as needed)\n  return true;\n};\n","import { isNullish, numberToHex, toNumber } from 'web3-utils';\n\nimport { WALLET_TYPE } from './widgetHelp';\nimport { IFeeConfig, ITokenPair, Mutable, Numbers, TransactionInput, TransactionOutput } from './types';\n\nexport const ERROR_MSG = {\n    INVALID_FEE_CONFIG: 'FeeConfig MUST be an object',\n    INVALID_FEE_PERCENT: 'FeePercent MUST be a number > 0 and <= 3',\n    INVALID_TOKEN_PAIR: 'Invalid tokenPair',\n    INVALID_BRIDGE_TOKEN_PAIR: 'Invalid bridgeTokenPair',\n    INVALID_PROVIDER_TYPE: 'Invalid providerType',\n    INVALID_WIDGET_VERSION: 'WIDGET_VERSION IS REQUIRED',\n};\n\nexport const isObject = (obj: any) => {\n    return obj !== null && typeof obj === 'object' && !Array.isArray(obj);\n};\n\nexport const isNumberOrNumberString = (val: any) => {\n    return (\n        !Number.isNaN(Number(val)) &&\n        val !== null &&\n        val !== undefined &&\n        val !== '' &&\n        !Array.isArray(val)\n    );\n};\n\nexport const verifyPercent = (feePercent: string | number) => {\n    return isNumberOrNumberString(feePercent) && Number(feePercent) > 0 && Number(feePercent) <= 3;\n};\n\nexport const checkFeeConfig = (feeConfig: IFeeConfig) => {\n    if (!isObject(feeConfig)) {\n        return ERROR_MSG.INVALID_FEE_CONFIG;\n    }\n    const errorFeeConfig = Object.values(feeConfig).some(fee => {\n        const commonFeePercent = fee?.feePercent;\n        if (!isObject(fee?.referrerAddress)) {\n            return !verifyPercent(commonFeePercent);\n        }\n        if (isObject(fee?.referrerAddress)) {\n            const errorFee = Object.values(fee?.referrerAddress).some(item => {\n                if (!isNumberOrNumberString(item.feePercent)) {\n                    return !verifyPercent(commonFeePercent);\n                }\n                return !verifyPercent(item?.feePercent);\n            });\n            return !!errorFee;\n        }\n        return false;\n    });\n    if (errorFeeConfig) {\n        return ERROR_MSG.INVALID_FEE_PERCENT;\n    }\n    return null;\n};\n\nexport const verifyChainId = (chainId: string | number) => {\n    return (typeof chainId === 'string' || typeof chainId === 'number') && Number(chainId) >= 0;\n};\n\nexport const isSameChain = (tokenPair: ITokenPair): boolean => {\n    const legalChains = verifyChainId(tokenPair?.fromChain) && verifyChainId(tokenPair?.toChain);\n    return Number(tokenPair?.fromChain) === Number(tokenPair?.toChain) && legalChains;\n};\n\nexport const checkTokenPairChain = (tokenPair: ITokenPair) => {\n    return verifyChainId(tokenPair?.fromChain) && verifyChainId(tokenPair?.toChain);\n};\n\nexport const verifyWidgetParams = ({ widgetVersion, feeConfig = {}, tokenPair, bridgeTokenPair, providerType }) => {\n    const walletType = WALLET_TYPE[providerType];\n\n    if (!widgetVersion) {\n        throw new Error(ERROR_MSG.INVALID_WIDGET_VERSION);\n    }\n    if (providerType && !walletType) {\n        throw new Error(ERROR_MSG.INVALID_PROVIDER_TYPE);\n    }\n    if (tokenPair && !checkTokenPairChain(tokenPair)) {\n        throw new Error(ERROR_MSG.INVALID_TOKEN_PAIR);\n    }\n    if (bridgeTokenPair && !checkTokenPairChain(bridgeTokenPair)) {\n        throw new Error(ERROR_MSG.INVALID_BRIDGE_TOKEN_PAIR);\n    }\n    const errorTips = checkFeeConfig(feeConfig);\n    if (errorTips) {\n        throw new Error(errorTips);\n    }\n    return true;\n};\n\nexport function txInputParamsFormatter(options: TransactionInput): Mutable<TransactionOutput> {\n    const modifiedOptions = { ...options } as unknown as Mutable<TransactionOutput>;\n\n    // allow both\n    if (options.gas || options.gasLimit) {\n        modifiedOptions.gas = toNumber(options.gas ?? options.gasLimit);\n    }\n\n    if (options.maxPriorityFeePerGas || options.maxFeePerGas) {\n        delete modifiedOptions.gasPrice;\n    }\n\n    ['gasPrice', 'gas', 'value', 'maxPriorityFeePerGas', 'maxFeePerGas', 'nonce', 'chainId']\n        .filter(key => !isNullish(modifiedOptions[key]))\n        .forEach(key => {\n            modifiedOptions[key] = numberToHex(modifiedOptions[key] as Numbers);\n        });\n\n    return modifiedOptions as TransactionOutput;\n}","import { txInputParamsFormatter } from '../verifyParamsUtils';\nimport { postMessageToWindow } from '../messages';\nimport { WidgetMethodsListen, EthereumProvider, TransactionInput } from '../types';\n\nimport { BlockchainStrategy } from './IBlockchainStrategy';\n\nexport class EvmStrategy implements BlockchainStrategy {\n    private iframeWindow: Window;\n\n    constructor(iframeWindow: Window) {\n        this.iframeWindow = iframeWindow;\n    }\n\n    async processTransaction(\n        method: string,\n        id: string,\n        path: string,\n        requestArgs: any[],\n        provider: EthereumProvider,\n        type: string,\n    ) {\n        const requestPara = { method, id: Number(id), params: requestArgs };\n        try {\n            const isConneted = provider?.selectedAddress || provider?.accounts?.[0];\n\n            if (!isConneted) {\n                await provider.request({\n                    method: 'eth_requestAccounts',\n                    id: Date.now(),\n                    params: [],\n                });\n            }\n\n            if (method === 'eth_sendTransaction') {\n                const payload = txInputParamsFormatter(requestArgs[0] as unknown as TransactionInput);\n\n                const requestPayload = { method, id: Number(id), params: [payload] };\n\n                console.log('eth_sendTransaction requestPara.params[0]', { requestPara, requestPayload });\n\n                const hash = await provider?.request?.(requestPayload as any);\n\n                console.log('provider.request===>', hash);\n\n                postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ON_EVENT, {\n                    id,\n                    mode: 'iframe',\n                    data: hash,\n                    path,\n                    type,\n                    error: null,\n                    success: true,\n                });\n            } else {\n                const data = await provider.request(requestPara);\n                console.log('sent evm transaction request:', data);\n                postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ON_EVENT, {\n                    id,\n                    mode: 'iframe',\n                    data,\n                    path,\n                    type,\n                    success: true,\n                });\n            }\n        } catch (error) {\n            console.error('EVM Error:', error);\n            postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ON_EVENT, {\n                id,\n                mode: 'iframe',\n                error: error && JSON.stringify(error),\n                path,\n                type,\n                success: false,\n            });\n        }\n    }\n\n    onProviderEvent(event: string, params: unknown) {\n        postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ONEVENT_WALLET_SATUS, {\n            event,\n            params,\n        });\n    }\n\n    registerProviderEventListeners(provider: any): void {\n        const EVENTS_TO_FORWARD_TO_IFRAME = [\n            'connect',\n            'disconnect',\n            'close',\n            'chainChanged',\n            'accountsChanged',\n        ];\n\n        EVENTS_TO_FORWARD_TO_IFRAME.forEach(event => {\n            provider.on(event, (params: unknown) => {\n                this.onProviderEvent(event, params);\n            });\n        });\n    }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { Transaction, PublicKey, VersionedTransaction } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\nimport { postMessageToWindow } from '../messages';\nimport { ProviderEventMessage, SolanaProvider, WidgetMethodsListen } from '../types';\nimport { SOLANA_CHAIN_ID, WALLET_TYPE } from '../widgetHelp';\n\nimport { BlockchainStrategy } from './IBlockchainStrategy';\n\n\n\nconst decodeMsg = (message) => {\n    try {\n        return Transaction.from(bs58.decode(message));\n    } catch (error) {\n        const deserializeTransaction = VersionedTransaction.deserialize(\n            bs58.decode(message),\n        );\n        console.log('new version deserializeTransaction:', deserializeTransaction);\n        return deserializeTransaction;\n    }\n}\n\nexport class SolanaStrategy implements BlockchainStrategy {\n    private iframeWindow: Window;\n\n    constructor(iframeWindow: Window) {\n        this.iframeWindow = iframeWindow;\n    }\n\n    async processTransaction(\n        method: string,\n        id: string,\n        path: string,\n        requestArgs: any[],\n        provider: SolanaProvider,\n        type: string,\n    ) {\n        try {\n            const solanaTransactionArgs = Array.isArray(requestArgs) ? requestArgs : [requestArgs];\n            const message = solanaTransactionArgs[0];\n            const onlyIfTrusted = solanaTransactionArgs[0]?.onlyIfTrusted;\n            const okxArgs = solanaTransactionArgs[0]?.okxArgs;\n            const transaction = solanaTransactionArgs[0]?.transaction;\n            const okxType = solanaTransactionArgs[0]?.type;\n\n\n            if (method === 'signAllTransactions') {\n                // decodeMsg and create newParams;\n                const newParams = solanaTransactionArgs.map(decodeMsg);\n                console.log('solana signAllTransactions newParams:', newParams);\n                // request\n                const resData = await provider[method](newParams);\n                // encode response\n                const data = resData.map((signedTransaction) => {\n                    const signature =\n                        signedTransaction?.signature || signedTransaction?.signatures[0];\n                    const encodeSignature = bs58.encode(signature);\n                    const serializedTransaction = bs58.encode(signedTransaction.serialize());\n                    return {signature: encodeSignature, serializedTransaction};\n                });\n\n                console.log('solana signAllTransactions request:', resData, data);\n\n                postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ON_EVENT, {\n                    id,\n                    mode: 'iframe',\n                    data,\n                    path,\n                    type,\n                    success: true,\n                });\n                return;\n            }\n\n            if (onlyIfTrusted) {\n                postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ON_EVENT, {\n                    id,\n                    mode: 'iframe',\n                    data: {\n                        onlyIfTrusted: true,\n                    },\n                    path,\n                    type,\n                    success: true,\n                });\n                return;\n            }\n\n            if (typeof message === 'string') {\n                try {\n                    const deserializeTransaction = Transaction.from(bs58.decode(message));\n                    solanaTransactionArgs[0] = deserializeTransaction;\n                } catch (error) {\n                    const deserializeTransaction = VersionedTransaction.deserialize(\n                        bs58.decode(message),\n                    );\n                    console.log('new version deserializeTransaction:', deserializeTransaction);\n                    solanaTransactionArgs[0] = deserializeTransaction;\n                }\n            }\n\n            if (okxArgs && okxType && transaction) {\n                const deserializeTransaction = VersionedTransaction.deserialize(\n                    bs58.decode(transaction),\n                );\n                const options = solanaTransactionArgs[0]?.options;\n\n                solanaTransactionArgs[0] = deserializeTransaction;\n                solanaTransactionArgs[1] = options;\n                solanaTransactionArgs[2] = okxArgs;\n            }\n\n            const data = await provider[method](...solanaTransactionArgs);\n            console.log('solana request:', data);\n\n            postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ON_EVENT, {\n                id,\n                mode: 'iframe',\n                data,\n                path,\n                type,\n                success: true,\n            });\n        } catch (error) {\n            console.error('Solana Error:', error);\n            postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ON_EVENT, {\n                id,\n                mode: 'iframe',\n                error: JSON.stringify(error),\n                path,\n                type,\n                success: false,\n            });\n        }\n    }\n\n    onProviderEvent(event: string, params: PublicKey) {\n        const address = params?.toBase58();\n        postMessageToWindow(\n            this.iframeWindow,\n            WidgetMethodsListen.PROVIDER_ONEVENT_WALLET_SOLANA_SATUS,\n            {\n                event,\n                params: {\n                    address,\n                    chainId: SOLANA_CHAIN_ID,\n                    walletType: WALLET_TYPE.SOLANA,\n                },\n            },\n        );\n    }\n\n    registerProviderEventListeners(provider: any): void {\n        const EVENTS_TO_FORWARD_TO_IFRAME_SOLANA = ['connect', 'disconnect', 'accountChanged'];\n        EVENTS_TO_FORWARD_TO_IFRAME_SOLANA.forEach(event => {\n            provider.on(event, (params: PublicKey) => {\n                this.onProviderEvent(event, params);\n            });\n        });\n    }\n\n    async processConnectEvent(args: ProviderEventMessage, ethereumProvider: SolanaProvider) {\n        const { id, mode, params, path, type } = args || {\n            params: null,\n            mode: null,\n            id: null,\n            path: null,\n            type: null,\n        };\n        try {\n            if (!ethereumProvider || mode === 'iframe') {\n                throw new Error('No Provider');\n            }\n\n            const { method } = params[0] || { method: null };\n\n            if (type === 'solana' && method === 'connect') {\n                const solana = ethereumProvider as SolanaProvider;\n                if (!solana?.connect) throw new Error('Not solana provider');\n\n                solana\n                    .connect()\n                    .then(key => {\n                        postMessageToWindow(\n                            this.iframeWindow,\n                            WidgetMethodsListen.PROVIDER_ON_EVENT_CONNECT,\n                            {\n                                id,\n                                mode: 'iframe',\n                                data: key.publicKey.toBase58(),\n                                path,\n                                type,\n                                success: true,\n                            },\n                        );\n                    })\n                    .catch(error => {\n                        postMessageToWindow(\n                            this.iframeWindow,\n                            WidgetMethodsListen.PROVIDER_ON_EVENT_CONNECT,\n                            {\n                                id,\n                                mode: 'iframe',\n                                error: JSON.stringify(error),\n                                path,\n                                type,\n                                success: false,\n                            },\n                        );\n                    });\n            }\n        } catch (error) {\n            postMessageToWindow(this.iframeWindow, WidgetMethodsListen.PROVIDER_ON_EVENT_CONNECT, {\n                id,\n                mode: 'iframe',\n                error: JSON.stringify(error),\n                path,\n                type,\n                success: false,\n            });\n        }\n    }\n}\n","import { ProviderEventMessage, ProviderType, EthereumProvider, SolanaProvider } from '../types';\n\nimport { EvmStrategy } from './EvmStrategy';\nimport { BlockchainStrategy } from './IBlockchainStrategy';\nimport { SolanaStrategy } from './SolanaStrategy';\n\nexport class TransactionProcessor {\n    private strategy: BlockchainStrategy;\n\n    constructor(providerType: ProviderType, iframeWindow: Window) {\n        switch (providerType) {\n            case ProviderType.SOLANA:\n                this.strategy = new SolanaStrategy(iframeWindow);\n                break;\n            case ProviderType.WALLET_CONNECT:\n            case ProviderType.EVM:\n                this.strategy = new EvmStrategy(iframeWindow);\n                break;\n            default:\n                throw new Error('Unsupported provider type or network error', providerType);\n        }\n    }\n\n    setStrategy(strategy: BlockchainStrategy) {\n        this.strategy = strategy;\n    }\n\n    async processTransaction(\n        method: string,\n        id: string,\n        path: string,\n        requestArgs: any[],\n        provider: any,\n        type: string,\n    ) {\n        console.log('processTransaction:', { method, id, path, requestArgs, provider, type });\n        await this.strategy.processTransaction(method, id, path, requestArgs, provider, type);\n    }\n\n    registerProviderEventListeners(provider: any) {\n        this.strategy.registerProviderEventListeners(provider);\n    }\n\n    async processConnectEvent(\n        args: ProviderEventMessage,\n        provider: EthereumProvider | SolanaProvider | null,\n    ) {\n        if (this.strategy instanceof SolanaStrategy) {\n            console.log('processConnectEvent:', this.strategy, { provider });\n            await this.strategy.processConnectEvent(args, provider as SolanaProvider);\n        }\n    }\n}\n","import { listenToMessageFromWindow, stopListeningToMessageFromWindow } from './messages';\nimport { TransactionProcessor } from './transactions/TransactionProcessor';\nimport {\n    EthereumProvider,\n    SolanaProvider,\n    ProviderEventMessage,\n    ProviderType,\n    WidgetProviderEvents,\n} from './types';\n\n/**\n * Handles JSON-RPC request coming from an iFrame by delegating to a given Ethereum provider.\n * The result will be passed back to the iFrame.\n *\n * Additionally, it will forward some special events from the wallet, to the iFrame window, for example connect/disconnect/chainChanged\n */\nexport class IframeRpcProviderBridge {\n    /**\n     * The Ethereum provider instance.\n     * When is null the JSON-RPC bridge is disconnected from the Ethereum provider.\n     * */\n    private provider: EthereumProvider | SolanaProvider | null = null;\n\n    /** Listener for Ethereum provider events */\n    private processor: TransactionProcessor;\n    private listener: (...args: any[]) => void;\n    private connectListener: (...args: any[]) => void;\n\n    /**\n     * Creates an instance of IframeRpcProviderBridge.\n     * @param iframeWindow - The iFrame window that will post up general RPC messages and to which the IframeRpcProviderBridge will forward the RPC result.\n     *  Also it will receive some special RPC events coming from the wallet, like connect/chainChanged,accountChanged\n     */\n    constructor(private iframeWindow: Window, providerType: ProviderType) {\n        this.processor = new TransactionProcessor(providerType, this.iframeWindow);\n    }\n\n    disconnect() {\n        this.provider = null;\n        stopListeningToMessageFromWindow(\n            window,\n            WidgetProviderEvents.PROVIDER_ON_EVENT,\n            this.listener,\n        );\n        stopListeningToMessageFromWindow(\n            window,\n            WidgetProviderEvents.PROVIDER_ON_EVENT_CONNECT,\n            this.connectListener,\n        );\n    }\n\n    onConnect(newProvider: EthereumProvider | SolanaProvider) {\n        if (this.provider) {\n            this.disconnect();\n        } else {\n            // Listen for messages coming to the main window (from the iFrame window)\n            console.log('onConnect====>');\n            this.listener = listenToMessageFromWindow(\n                window,\n                WidgetProviderEvents.PROVIDER_ON_EVENT,\n                this.processProviderEventFromWindow,\n            );\n            this.connectListener = listenToMessageFromWindow(\n                window,\n                WidgetProviderEvents.PROVIDER_ON_EVENT_CONNECT,\n                this.processConnectEvent,\n            );\n        }\n\n        // Save the provider\n        this.provider = newProvider;\n\n        // Register provider event listeners based on the type of provider (Solana or EVM)\n        this.processor.registerProviderEventListeners(newProvider);\n    }\n\n    /**\n     * Process provider events coming from the window (from iFrame).\n     */\n    private processProviderEventFromWindow = async (args: ProviderEventMessage) => {\n        console.log('processProviderEventFromWindow:', args);\n        const { type } = args;\n        const { method, params: requestArgs } = args.params[0];\n        await this.processor.processTransaction(\n            method,\n            args.id,\n            args.path,\n            requestArgs,\n            this.provider,\n            type,\n        );\n    };\n\n    /**\n     * Process connect event for Solana\n     */\n    private processConnectEvent = async (args: ProviderEventMessage) => {\n        await this.processor.processConnectEvent(args, this.provider);\n    };\n}\n","export const DEFAULT_HEIGHT = '480px';\nexport const DEFAULT_WIDTH = 450;\nexport const MIN_WIDTH = 375;\n\nexport function updateIframeStyle(iframe: HTMLIFrameElement, style: { width: number }) {\n    updateIframeWidth(iframe, style.width);\n}\n\nexport const getStyleElementIdentifier = (function () {\n    const uniqId = Date.now().toString();\n    return function () {\n        return {\n            id: uniqId,\n            defaultClassName: `default-widget-iframe-${uniqId}`,\n            specifiedClassName: `specified-widget-iframe-${uniqId}`,\n        };\n    };\n})();\n\nfunction updateStyleTagInnerHTML(\n    styleElement: HTMLStyleElement,\n    {\n        defaultClassName,\n        specifiedClassName,\n        width,\n    }: {\n        defaultClassName: string;\n        specifiedClassName: string;\n        width: number;\n    },\n) {\n    styleElement.innerHTML = '';\n    styleElement.innerHTML = `\n        .${defaultClassName} {\n            width: ${DEFAULT_WIDTH}px;\n            min-height: ${DEFAULT_HEIGHT};\n            border: none;\n        }\n        @media (max-width: 767px) {\n            .${defaultClassName} {\n                width: 100%;\n            }\n        }\n        .${specifiedClassName} {\n            width: ${width}px;\n            min-height: ${DEFAULT_HEIGHT};\n            border: none;\n        }\n    `;\n}\n\nfunction importWidthHeightStyle(width: number) {\n    const { id, defaultClassName, specifiedClassName } = getStyleElementIdentifier();\n\n    const existStyleElement = document.getElementById(id);\n    if (existStyleElement) {\n        updateStyleTagInnerHTML(existStyleElement as HTMLStyleElement, {\n            defaultClassName,\n            specifiedClassName,\n            width,\n        });\n        return existStyleElement;\n    }\n    const styleElement = document.createElement('style');\n    updateStyleTagInnerHTML(styleElement, { defaultClassName, specifiedClassName, width });\n    styleElement.id = id;\n    document.head.appendChild(styleElement);\n    return styleElement;\n}\n\nfunction updateIframeWidth(iframe: HTMLIFrameElement, width?: number) {\n    const newWidth = Number(width);\n    const { defaultClassName, specifiedClassName } = getStyleElementIdentifier();\n    if (!newWidth) {\n        importWidthHeightStyle(DEFAULT_WIDTH);\n        iframe.className = defaultClassName;\n    } else {\n        importWidthHeightStyle(newWidth < MIN_WIDTH ? MIN_WIDTH : newWidth);\n        iframe.className = specifiedClassName;\n    }\n}\n\nexport function destroyStyleElement() {\n    const { id } = getStyleElementIdentifier();\n    const styleElement = document.getElementById(id);\n    if (styleElement) {\n        styleElement.parentNode.removeChild(styleElement);\n    }\n}\n","import { OkxEventListeners } from './events';\nimport { IframeEventEmitter } from './IframeEventEmitter';\nimport { IframeRpcProviderBridge } from './IframeRpcProviderBridge';\nimport {\n    WindowListener,\n    listenToMessageFromWindow,\n    postMessageToWindow,\n    stopListeningWindowListener,\n} from './messages';\nimport {\n    EthereumProvider,\n    IWidgetConfig,\n    IWidgetParams,\n    IWidgetProps,\n    ProviderType,\n    UpdateProviderParams,\n    WidgetMethodsEmit,\n    WidgetMethodsListen,\n} from './types';\nimport { checkUrlParam, createWidgetParams, getAddress, getChainId, validateWidgetParams, WALLET_TYPE } from './widgetHelp';\nimport { updateIframeStyle, DEFAULT_HEIGHT, destroyStyleElement } from './updateIframeStyle';\n\n/**\n * Callback function signature for updating the Okx Swap Widget.\n */\nexport interface OkxSwapWidgetHandler {\n    updateParams: (params: IWidgetParams) => void;\n    updateListeners: (newListeners?: OkxEventListeners) => void;\n    updateProvider: (newProvider: EthereumProvider, providerType: ProviderType) => void;\n    destroy: () => void;\n    iframeWindow: Window;\n}\n\nconst getConnectWalletParams = async (provider, providerType) => {\n    const updateProviderParams = {\n        providerType,\n        walletType: WALLET_TYPE[providerType],\n        chainId: await getChainId(provider, providerType),\n        address: await getAddress(provider, providerType),\n    };\n    return updateProviderParams;\n}\n\n/**\n * Generates and injects a Okx Swap Widget into the provided container.\n * @param container - The HTML element to inject the widget into.\n * @param params - Parameters for configuring the widget.\n * @returns A callback function to update the widget with new settings.\n */\nexport function createOkxSwapWidget(\n    container: HTMLElement,\n    config: IWidgetConfig,\n): OkxSwapWidgetHandler {\n    console.log('createOkxSwapWidget====>', container, config);\n    const { params, provider: providerAux, listeners } = config;\n    let provider = providerAux;\n    // eslint-disable-next-line prefer-const\n    let { data: currentParams, url } = createWidgetParams(params);\n\n    // 1. Create a brand new iframe\n    const iframe = createIframe(params, url);\n\n    // 2. Clear the content (delete any previous iFrame if it exists)\n    container.innerHTML = '';\n    container.appendChild(iframe);\n\n    const { contentWindow: iframeWindow } = iframe;\n\n    if (!iframeWindow) {\n        console.error('Iframe does not contain a window', iframe);\n        throw new Error('Iframe does not contain a window!');\n    }\n\n    // 3. Send appCode (once the widget posts the ACTIVATE message)\n    const windowListeners: WindowListener[] = [];\n    // todo: check this\n    // windowListeners.push(sendAppCodeOnActivation(iframeWindow, params.appCode));\n\n    const updateProviderCallback = async () => {\n        const providerParams = await getConnectWalletParams(provider, currentParams.providerType);\n        console.log('updateProviderEmitEvent====>dex-ready', providerParams, provider);\n        updateProviderEmitEvent(iframeWindow, providerParams, provider);\n    }\n\n    // 4. Handle widget height changes\n    // todo: check this\n    windowListeners.push(\n        ...listenToHeightChanges(iframe, params.height),\n        listenToDexLoadReady(iframeWindow, currentParams, updateProviderCallback),\n    );\n\n    // 5. Intercept deeplinks navigation in the iframe\n    // windowListeners.push(interceptDeepLinks());\n\n    // 6. Handle and forward widget events to the listeners\n    const iFrameOkxEventEmitter = new IframeEventEmitter(window, listeners);\n\n    // 7. Wire up the iframeRpcProviderBridge with the provider (so RPC calls flow back and forth)\n    let iframeRpcProviderBridge = updateProvider(iframeWindow, null, provider, params.providerType);\n\n    // 8. Schedule the uploading of the params, once the iframe is loaded\n    iframe.addEventListener('load', () => {\n        console.log('updateParams====>load', provider, currentParams);\n        updateParams(iframeWindow, currentParams);\n        getConnectWalletParams(\n          provider,\n          currentParams.providerType,\n        ).then((updateProviderParams) => {\n            console.log('updateProviderEmitEvent====>load-success', updateProviderParams, provider);\n            updateProviderEmitEvent(iframeWindow, updateProviderParams, provider);\n        }).catch((error) => {\n            console.log('updateProviderEmitEvent====>load-error', provider, error);\n        })\n    });\n\n    // 9. Listen for messages from the iframe\n    // const iframeSafeSdkBridge = new IframeSafeSdkBridge(window, iframeWindow);\n\n    // 10. Return the handler, so the widget, listeners, and provider can be updated\n    return {\n        updateParams: (newParams: IWidgetParams) => {\n            // width, lang, theme\n            const { width, lang, theme, extraParams } = newParams;\n\n            updateIframeStyle(iframe, { width });\n\n            const nextParams = {\n                ...params,\n                lang,\n                theme,\n                extraParams,\n            };\n            currentParams = createWidgetParams(nextParams).data;\n\n            validateWidgetParams(currentParams);\n            console.log('updateParams====>updateParamsFunction', provider, params);\n            updateParams(iframeWindow, currentParams);\n        },\n        updateListeners: (newListeners?: OkxEventListeners) =>\n            iFrameOkxEventEmitter.updateListeners(newListeners),\n        updateProvider: async (newProvider, providerType: ProviderType) => {\n            validateWidgetParams(providerType);\n            iframeRpcProviderBridge?.disconnect();\n            provider?.removeAllListeners?.();\n            // iframeSafeSdkBridge.stopListening();\n\n            provider = newProvider;\n\n            const updateProviderParams = await getConnectWalletParams(provider, providerType);\n\n            currentParams = { ...currentParams, ...updateProviderParams };\n\n            iframeRpcProviderBridge = updateProvider(\n                iframeWindow,\n                iframeRpcProviderBridge,\n                newProvider,\n                providerType,\n            );\n            console.log('updateProvider====>updateProviderFunction', newProvider, providerType);\n            updateProviderEmitEvent(iframeWindow, updateProviderParams, provider);\n\n            // updateParams(iframeWindow, currentParams, newProvider);\n        },\n\n        destroy: () => {\n            // Disconnet rpc provider and unsubscribe to events\n            iframeRpcProviderBridge?.disconnect();\n            // Stop listening for Okx events\n            iFrameOkxEventEmitter.stopListeningIframe();\n\n            // Disconnect all listeners\n            windowListeners.forEach(listener => window.removeEventListener('message', listener));\n\n            // Stop listening for SDK messages\n            // iframeSafeSdkBridge.stopListening();\n\n            // Destroy the iframe\n            try {\n                container.removeChild(iframe);\n            } catch (e) {\n                console.error('Error removing iframe, maybe iframe is removed', e);\n            }\n            destroyStyleElement();\n        },\n        iframeWindow,\n    };\n}\n\n/**\n * Update the provider for the iframeRpcProviderBridge.\n *\n * It will disconnect from the previous provider and connect to the new one.\n *\n * @param iframe iframe window\n * @param iframeRpcProviderBridge iframe RPC manager\n * @param newProvider new provider\n *\n * @returns the iframeRpcProviderBridge\n */\nfunction updateProvider(\n    iframe: Window,\n    iframeRpcProviderBridge: IframeRpcProviderBridge | null,\n    newProvider: EthereumProvider,\n    providerType: ProviderType,\n): IframeRpcProviderBridge {\n    // Verify the params\n    if (!newProvider) {\n        return;\n    }\n\n    const Types = Object.values(ProviderType);\n\n    if (!Types.includes(providerType)) {\n        throw new Error('providerType is required');\n    }\n\n    console.log('updateProvider iframeRpcProviderBridge===>', iframeRpcProviderBridge);\n\n    // TODO: check provider\n\n    // Disconnect from the previous provider bridge\n    if (iframeRpcProviderBridge) {\n        iframeRpcProviderBridge.disconnect();\n    }\n\n    const providerBridge = new IframeRpcProviderBridge(iframe, providerType);\n\n    // Connect to the new provider\n    if (newProvider) {\n        providerBridge.onConnect(newProvider);\n    }\n\n    return providerBridge;\n}\n\n/**\n * Creates an iframe element for the Okx Swap Widget based on provided parameters and settings.\n * @param params - Parameters for the widget.\n * @returns The generated HTMLIFrameElement.\n */\nfunction createIframe(params: IWidgetParams, url: string): HTMLIFrameElement {\n    // todo: check this\n    const { width } = params;\n\n    const iframe = document.createElement('iframe');\n\n    // Check if the URL is valid\n    checkUrlParam(url);\n\n    iframe.src = url;\n    // update iframe style\n    updateIframeStyle(iframe, { width });\n\n    iframe.scrolling = 'no';\n    iframe.style.border = 'none';\n\n    return iframe;\n}\n\n/**\n * Updates the Okx Swap Widget based on the new settings provided.\n * @param params - New params for the widget.\n * @param contentWindow - Window object of the widget's iframe.\n */\nfunction updateProviderEmitEvent(\n    contentWindow: Window,\n    params: UpdateProviderParams,\n    provider: EthereumProvider | undefined,\n) {\n    const hasProvider = !!provider;\n\n    console.trace('updateProviderEmitEvent', params, provider);\n\n    postMessageToWindow<WidgetMethodsListen.UPDATE_PROVIDER>(\n        contentWindow,\n        WidgetMethodsListen.UPDATE_PROVIDER,\n        {\n            appParams: params,\n            hasProvider,\n        },\n    );\n}\n\n/**\n * Updates the Okx Swap Widget based on the new settings provided.\n * @param params - New params for the widget.\n * @param contentWindow - Window object of the widget's iframe.\n */\nfunction updateParams(contentWindow: Window, props: IWidgetProps) {\n    console.log('updateParams====>end', props, contentWindow);\n    postMessageToWindow(contentWindow, WidgetMethodsListen.UPDATE_PARAMS, {\n        appParams: props,\n    });\n}\n\n/**\n * Listens for iframeHeight emitted by the widget, and applies dynamic height adjustments to the widget's iframe.\n *\n * @param iframe - The HTMLIFrameElement of the widget.\n * @param defaultHeight - Default height for the widget.\n */\nfunction listenToHeightChanges(\n    iframe: HTMLIFrameElement,\n    defaultHeight = DEFAULT_HEIGHT,\n): WindowListener[] {\n    return [\n        listenToMessageFromWindow(window, WidgetMethodsEmit.UPDATE_HEIGHT, data => {\n            iframe.style.height = data.height ? `${data.height}px` : defaultHeight;\n            iframe.style.minHeight = data.height ? `${data.height}px` : defaultHeight;\n        }),\n        listenToMessageFromWindow(window, WidgetMethodsEmit.SET_FULL_HEIGHT, ({ isUpToSmall }) => {\n            iframe.style.height = isUpToSmall ? defaultHeight : `${document.body.offsetHeight}px`;\n            iframe.style.minHeight = isUpToSmall ? defaultHeight : `${document.body.offsetHeight}px`;\n        }),\n    ];\n}\n\nfunction listenToDexLoadReady(iframeWindow: Window, params: IWidgetProps, updateProviderCallback: Function): WindowListener {\n    const listener = listenToMessageFromWindow(window, WidgetMethodsEmit.LOAD_READY, () => {\n        // updateParams again;\n        console.log('updateParams=====>dex-ready', iframeWindow, params);\n        updateParams(iframeWindow, params);\n        // update provider again\n        updateProviderCallback();\n        stopListeningWindowListener(window, listener);\n    });\n    return listener;\n}\n"],"names":["SimpleOkxEventEmitter","__publicField","listener","event","handler","payload","OKX_SWAP_WIDGET_EVENT_KEY","postMessageToWindow","contentWindow","method","postPayload","listenToMessageFromWindow","callback","isEventData","obj","stopListeningToMessageFromWindow","_method","stopListeningWindowListener","WidgetMethodsEmit","WidgetMethodsListen","WidgetProviderEvents","TradeType","THEME","WIDGET_PALETTE_COLORS","ProviderType","ChainName","IframeEventEmitter","listeners","okxEvent","freeGlobal","freeSelf","root","Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","value","isOwn","tag","unmasked","result","objectToString","nullTag","undefinedTag","baseGetTag","isObjectLike","isArray","isObject","type","identity","asyncTag","funcTag","genTag","proxyTag","isFunction","arrayEach","array","iteratee","index","length","MAX_SAFE_INTEGER","reIsUint","isIndex","isLength","isArrayLike","isPrototype","Ctor","proto","baseTimes","n","argsTag","baseIsArguments","propertyIsEnumerable","isArguments","stubFalse","freeExports","freeModule","moduleExports","Buffer","nativeIsBuffer","isBuffer","arrayTag","boolTag","dateTag","errorTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","baseUnary","func","freeProcess","nodeUtil","types","nodeIsTypedArray","isTypedArray","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","key","overArg","transform","arg","nativeKeys","baseKeys","object","keys","createBaseFor","fromRight","keysFunc","iterable","props","baseFor","baseForOwn","createBaseEach","eachFunc","collection","baseEach","castFunction","forEach","isString","DEFAULT_BASE_URL","WIDGET_ROUTE_CONSTANTS","WALLET_TYPE","SOLANA_CHAIN_ID","formatTokenPair","tokenPair","formatDefaultConfig","tradeType","bridgeTokenPair","formattedTokenPair","formattedBridgeTokenPair","defaultIsBridge","route","defaultTokenPair","createWidgetParams","widgetParams","baseUrl","feeConfig","providerType","theme","lang","chainIds","extraParams","widgetVersion","define_process_env_default","sdkVersion","verifyWidgetParams","supportTradeType","initParams","urlParams","params","queryString","url","data","requestChainId","provider","chainId","decimalChainId","error","requestAddress","accounts","isEvmProvider","getChainId","getAddress","account","_a","_b","isPrintableString","str","safeDecodeURIComponent","decodedValue","e","checkUrlParam","urlObj","validateWidgetParams","ERROR_MSG","isNumberOrNumberString","val","verifyPercent","feePercent","checkFeeConfig","fee","commonFeePercent","item","verifyChainId","isSameChain","legalChains","checkTokenPairChain","walletType","errorTips","txInputParamsFormatter","options","modifiedOptions","toNumber","isNullish","numberToHex","EvmStrategy","iframeWindow","id","path","requestArgs","requestPara","requestPayload","hash","base","ALPHABET","BASE_MAP","j","i","x","xc","BASE","LEADER","FACTOR","iFACTOR","encode","source","zeroes","pbegin","pend","size","b58","carry","it1","it2","decodeUnsafe","psz","b256","it3","it4","vch","decode","string","buffer","src","basex","require$$0","bs58","decodeMsg","message","Transaction","deserializeTransaction","VersionedTransaction","SolanaStrategy","solanaTransactionArgs","onlyIfTrusted","okxArgs","transaction","_c","okxType","_d","newParams","resData","signedTransaction","signature","encodeSignature","serializedTransaction","_e","address","args","ethereumProvider","mode","solana","TransactionProcessor","strategy","IframeRpcProviderBridge","newProvider","DEFAULT_HEIGHT","DEFAULT_WIDTH","MIN_WIDTH","updateIframeStyle","iframe","style","updateIframeWidth","getStyleElementIdentifier","uniqId","updateStyleTagInnerHTML","styleElement","defaultClassName","specifiedClassName","width","importWidthHeightStyle","existStyleElement","newWidth","destroyStyleElement","getConnectWalletParams","createOkxSwapWidget","container","config","providerAux","currentParams","createIframe","windowListeners","updateProviderCallback","providerParams","updateProviderEmitEvent","listenToHeightChanges","listenToDexLoadReady","iFrameOkxEventEmitter","iframeRpcProviderBridge","updateProvider","updateParams","updateProviderParams","nextParams","newListeners","providerBridge","hasProvider","defaultHeight","isUpToSmall"],"mappings":"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","x_google_ignoreList":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46]}