import { C as L, E as T, P as C, r as S, S as o, e as P, T as c, q as W, f as m, o as f, W as G, b as F, d as l, h as H, m as g, F as w, c as u, x as h, w as M, u as b, A as U, z as d, y as v, g as X, i as B, B as j, k, l as x, p as Y, D as q, s as z, a as y, t as J, G as Q, j as V, v as Z, n as $ } from "./OkxSwapWidget.Cv4XIKUj.js";
var A = /* @__PURE__ */ ((E) => (E.SWAP_ETH_FLOW_SENT_TX = "SWAP_ETH_FLOW_SENT_TX", E.ORDER_CREATED = "ORDER_CREATED", E.SWAP_SIGNING_ERROR = "SWAP_SIGNING_ERROR", E.ORDER_FULFILLED = "ORDER_FULFILLED", E.ORDER_CANCELLED = "ORDER_CANCELLED", E.ORDER_EXPIRED = "ORDER_EXPIRED", E.ORDER_PRESIGNED = "ORDER_PRESIGNED", E.ONCHAIN_TRANSACTION_MINED = "ONCHAIN_TRANSACTION_MINED", E.ONCHAIN_TRANSACTION_FAILED = "ONCHAIN_TRANSACTION_FAILED", E))(A || {}), a = /* @__PURE__ */ ((E) => (E.ON_TOAST_MESSAGE = "ON_TOAST_MESSAGE", E.ON_POSTED_ORDER = "ON_POSTED_ORDER", E.ON_FULFILLED_ORDER = "ON_FULFILLED_ORDER", E.ON_CANCELLED_ORDER = "ON_CANCELLED_ORDER", E.ON_EXPIRED_ORDER = "ON_EXPIRED_ORDER", E.ON_PRESIGNED_ORDER = "ON_PRESIGNED_ORDER", E.ON_ONCHAIN_TRANSACTION = "ON_ONCHAIN_TRANSACTION", E.ON_CHANGE_TRADE_PARAMS = "ON_CHANGE_TRADE_PARAMS", E.NO_WALLET_CONNECT = "NO_WALLET_CONNECT", E.ON_CONNECT_WALLET = "ON_CONNECT_WALLET", E.ON_FROM_CHAIN_CHANGE = "ON_FROM_CHAIN_CHANGE", E))(a || {}), e = /* @__PURE__ */ ((E) => (E.BUY = "buy", E.SELL = "sell", E))(e || {}), D = /* @__PURE__ */ ((E) => (E[E.MAINNET = 1] = "MAINNET", E[E.GNOSIS_CHAIN = 100] = "GNOSIS_CHAIN", E[E.ARBITRUM_ONE = 42161] = "ARBITRUM_ONE", E[E.SEPOLIA = 11155111] = "SEPOLIA", E))(D || {});
function i(E) {
  return !!(E && typeof E == "object");
}
const _ = [
  "https://www.okx.com",
  "https://www.okx.ac"
], t = (E) => {
  const N = new AbortController();
  return setTimeout(() => N.abort(), E), N.signal;
}, O = (E, N = 5e3) => E ? fetch(E, { signal: t(N) }).then((R) => {
  if (R.ok)
    return E;
  {
    const r = _[_.indexOf(E) + 1];
    return O(r, N);
  }
}).catch(() => {
  const R = _[_.indexOf(E) + 1];
  return O(R, N);
}) : Promise.resolve();
function s() {
  return O(_[0]);
}
export {
  L as ChainName,
  T as ERROR_MSG,
  a as OkxEvents,
  e as OrderKind,
  C as ProviderType,
  S as SOLANA_CHAIN_ID,
  o as SimpleOkxEventEmitter,
  D as SupportedChainId,
  P as THEME,
  A as ToastMessageType,
  c as TradeType,
  W as WALLET_TYPE,
  m as WIDGET_PALETTE_COLORS,
  f as WIDGET_ROUTE_CONSTANTS,
  G as WidgetMethodsEmit,
  F as WidgetMethodsListen,
  l as WidgetProviderEvents,
  H as checkFeeConfig,
  g as checkTokenPairChain,
  w as checkUrlParam,
  u as createOkxSwapWidget,
  h as createWidgetParams,
  s as fetchDomain,
  M as formatDefaultConfig,
  b as formatTokenPair,
  U as getAddress,
  d as getChainId,
  v as isEvmProvider,
  X as isNumberOrNumberString,
  B as isObject,
  i as isOkxSwapWidgetPalette,
  j as isPrintableString,
  k as isSameChain,
  x as listenToMessageFromWindow,
  Y as postMessageToWindow,
  q as safeDecodeURIComponent,
  z as stopListeningToMessageFromWindow,
  y as stopListeningWindowListener,
  J as txInputParamsFormatter,
  Q as validateWidgetParams,
  V as verifyChainId,
  Z as verifyPercent,
  $ as verifyWidgetParams
};
//# sourceMappingURL=index.mjs.map
